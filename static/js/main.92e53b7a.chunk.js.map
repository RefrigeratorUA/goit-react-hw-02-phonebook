{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/Notification/Notification.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","arrState","Object","keys","className","map","el","type","onClick","slice","toUpperCase","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","styles","main","App","state","props","updateCount","prop","setState","prevState","countTotalFeedback","key","countPositiveFeedbackPercentage","toFixed","this","Component","defaultProps","ReactDOM","render","StrictMode","document","querySelector","module","exports"],"mappings":"uQAsBeA,EApBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAWC,OAAOC,KAAKJ,GAC7B,OACE,oBAAIK,UAAU,UAAd,SACGH,EAASI,KAAI,SAAAC,GAAE,OACd,6BACE,wBAAQC,KAAK,SAASH,UAAU,MAAMI,QAAS,kBAAMR,EAAgBM,IAArE,SACGA,EAAGG,MAAM,EAAG,GAAGC,cAAgBJ,EAAGG,MAAM,MAFpCH,SCyBFK,EA9BI,SAAC,GAA2E,IAAD,IAAxEC,YAAwE,MAAjE,EAAiE,MAA9DC,eAA8D,MAApD,EAAoD,MAAjDC,WAAiD,MAA3C,EAA2C,MAAxCC,aAAwC,MAAhC,EAAgC,MAA7BC,0BAA6B,MAAR,EAAQ,EAC5F,OACE,qBAAIZ,UAAU,aAAd,UACE,uCACO,+BAAOQ,OAEd,0CACU,+BAAOC,OAEjB,sCACM,+BAAOC,OAEb,wCACQ,+BAAOC,OAEf,oDACoB,iCAAOC,EAAP,cCFXC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACGD,GAAS,6BAAKA,IACdC,M,gBCKQC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAOA,GAAW,mBAAGjB,UAAWkB,IAAOC,KAArB,SAA4BF,KCG3BG,E,4MAanBC,MAAQ,CACNb,KAAM,EAAKc,MAAMd,KACjBC,QAAS,EAAKa,MAAMb,QACpBC,IAAK,EAAKY,MAAMZ,K,EAGlBa,YAAc,SAAAC,GAAI,OAAI,EAAKC,UAAS,gBAAWC,EAAX,EAAIF,GAAJ,sBAA+BA,EAAOE,EAAY,O,EAEtFC,mBAAqB,WACnB,IAAIhB,EAAQ,EACZ,IAAK,IAAIiB,KAAO,EAAKP,MACnBV,GAAS,EAAKU,MAAMO,GAEtB,OAAOjB,G,EAGTkB,gCAAkC,WAChC,OAAO,EAAKF,sBACN,EAAKN,MAAMb,KAAO,EAAKmB,qBAAwB,KAAKG,QAAQ,GAC9D,K,uDAGI,IAAD,EACwBC,KAAKV,MAA5Bb,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQoB,KAAKJ,qBACbf,EAAqBmB,KAAKF,kCAChC,OACE,qCACE,cAAC,EAAD,CAASf,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBnB,QAASoC,KAAKV,MAAOzB,gBAAiBmC,KAAKR,gBAE7DZ,EACC,cAAC,EAAD,CAASG,MAAM,aAAf,SACE,cAAC,EAAD,CACEN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,MAIxB,cAAC,EAAD,CAAcK,QAAQ,6B,GAvDCe,aAAZZ,EACZa,aAAe,CACpBzB,KAAM,EACNC,QAAS,EACTC,IAAK,GCLTwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,W,kBCTzBC,EAAOC,QAAU,CAAC,KAAO,8B","file":"static/js/main.92e53b7a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const arrState = Object.keys(options);\n  return (\n    <ul className=\"btnList\">\n      {arrState.map(el => (\n        <li key={el}>\n          <button type=\"button\" className=\"btn\" onClick={() => onLeaveFeedback(el)}>\n            {el.slice(0, 1).toUpperCase() + el.slice(1)}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object,\n  update: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Statistics = ({ good = 0, neutral = 0, bad = 0, total = 0, positivePercentage = 0 }) => {\n  return (\n    <ul className=\"resultList\">\n      <li>\n        Good:<span>{good}</span>\n      </li>\n      <li>\n        Neutral:<span>{neutral}</span>\n      </li>\n      <li>\n        Bad:<span>{bad}</span>\n      </li>\n      <li>\n        Total:<span>{total}</span>\n      </li>\n      <li>\n        Positive feedback:<span>{positivePercentage}%</span>\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport styles from '../Notification/Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return message && <p className={styles.main}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nexport default class App extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  static propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  };\n\n  state = {\n    good: this.props.good,\n    neutral: this.props.neutral,\n    bad: this.props.bad,\n  };\n\n  updateCount = prop => this.setState(({ [prop]: prevState }) => ({ [prop]: prevState + 1 }));\n\n  countTotalFeedback = () => {\n    let total = 0;\n    for (let key in this.state) {\n      total += this.state[key];\n    }\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return this.countTotalFeedback()\n      ? ((this.state.good / this.countTotalFeedback()) * 100).toFixed(0)\n      : '0';\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={this.state} onLeaveFeedback={this.updateCount} />\n        </Section>\n        {total ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.querySelector('#root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Notification_main__2Rqdj\"};"],"sourceRoot":""}